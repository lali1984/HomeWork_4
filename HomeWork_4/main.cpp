
// 1. Заполнить статический массив 'inArray[]' размером 100 элементов случайными целыми числами в диапазоне [-25, 25]
//	используя https://en.cppreference.com/w/cpp/numeric/random/uniform_int_distribution;
// 2. Создать динамический массив 'dynArray[]' со всеми четными значениями из массива 'inArray[]';
// 3. Провести преобразования мвссива 'dynArray[]':
//		- в первый элемент записать результат деления по модулю первого элемента на последний;
//		- в последний результат деления по модулю последнего на первый;
//		- во второй результат деления по модулю второго на предпоследний;
//		- во второй результат деления по модулю второго на предпоследний;
//		- и т.д.;
// ***Если деление не возможно, то оставляем элемент, как есть без изменений.
// ***Если число элементов в динамическом массиве нечетное, то средний элемент остается, как есть без измененинй.
//		- Удалить все элементы из динамического массива кратные четырем;
//		- В полученном массиве чисел 'dynArray[]' найти и вывести минимальное и максимальной число;
//		- Вывести исходный массив.
// ***Выводить динамический массив после кажой модификации. 
// ***Использовать только один статический и один динамический массивы.

#include <iostream>
#include <array>
#include <vector>
#include "MyHeader.h"

using namespace HomeWork4Func;

int main()
{
	std::array<int, 100>inputArray = { 0 };
	std::vector<int>dynArray;
   
    // 1. Заполнить статический массив 'inArray[]' размером 100 элементов случайными целыми числами в диапазоне [-25, 25]
    for (int& val : inputArray)
    {
        val = RandomGeneration(-25, 25); 

        // 2. Создать динамический массив 'dynArray[]' со всеми четными значениями из массива 'inArray[]'
        switch (val & 1) 
        {
        case 0:
            dynArray.push_back(val);
        }
    }

    PrintVector(dynArray, 0);


    // 3. Провести преобразования мвссива 'dynArray[]'

    //- в первый элемент записать результат деления по модулю первого элемента на последний;
    //- в последний результат деления по модулю последнего на первый;
    //- во второй результат деления по модулю второго на предпоследний;
    //- во второй результат деления по модулю второго на предпоследний;
    //- и т.д.;
    size_t size = dynArray.size();
    std::vector<int>::reverse_iterator itRevers = dynArray.rbegin();
    std::vector<int>::iterator it = dynArray.begin();
    for (; it != dynArray.begin() + (size / 2); ++it, ++itRevers)
    {
        int num = *it;

        if (*itRevers != 0)
            *it %= *itRevers;

        if (num !=0)
            *itRevers %=num;
    }

    PrintVector(dynArray, 1);

    //- Удалить все элементы из динамического массива кратные четырем
    it = dynArray.begin();

    for (int& val : dynArray)
    {
        switch (*it % 4 == 0 && *it != 0)
        {
        case true:
            it = dynArray.erase(it);
            continue;
        }

        it++;
    }

    PrintVector(dynArray, 2);

    //- В полученном массиве чисел 'dynArray[]' найти и вывести минимальное и максимальной число;
    FindeMinMaxVal(dynArray);

    //- Вывести исходный массив.
    PrintArray(inputArray);
}